FROM ruby:2.7.0
MAINTAINER Steven Chang <stevencch99@gmail.com>

# replace shell with bash so we can source files
# RUN rm /bin/sh && ln -s /bin/bash bin/sh

# copy the proxy setting for the apt tool
COPY ./files/etc/apt/apt.conf /etc/apt/apt.conf

ENV http_proxy=http://172.19.8.10:3128 https_proxy=http://172.19.8.10:3128

# original
# RUN apt-get update -qq && apt-get install -y build-essential libpq-dev nodejs vim ghostscript postgis imagemagick nodejs npm
# try to update
# RUN apt-get update -qq && apt-get install -y build-essential libpq-dev nodejs vim
RUN apt-get update -qq && apt-get install -y nodejs postgresql-client 

RUN mkdir -p /app
WORKDIR /app

# Copy the Gemfile as well as the Gemfile.lock and install
# the RubyGems. This is a separate step so the dependencies
# will be cached unless changes to one of those two files
# are made.
COPY Gemfile Gemfile.lock package.json yarn.lock ./
RUN bundle install --without development test --verbose

# RUN npm install -g yarn && yarn install --check-files

COPY . /app
# RUN ["chmod", "+x", "/app/docker-entrypoint.sh"] # omitted this line by commit the file locally

# Expose port 3000 to the Docker host, so we can access it from outside.
EXPOSE 3000

# consider to change the settings of rails db:setup and related DISABLE_DATABASE_ENVIRONMENT_CHECK virable
ENV RAILS_ENV=production SECRET_KEY_BASE=123 DISABLE_DATABASE_ENVIRONMENT_CHECK=1 RAILS_LOG_TO_STDOUT=true

# The main command to run when the container starts. Also
# tell the Rails dev server to bind to all interfaces by
# default.

# ==== these lines might be replaced by the command like:
# docker-compose run app rails db:setup
# docker-compose run app rails webpacker:install
# docker-compose run app rails assets:precompile
# CMD rails db:setup
# CMD rails webpacker:install
# CMD rails assets:precompile
# CMD rails db:migrate assets:precompile && puma -C config/puma.rb 
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]

